{"version":3,"sources":["webpack:///./src/pages/components/Result.js"],"names":["decimalFormatter","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","Result","assets","covariances","useState","risk","setRisk","useEffect","length","total","reduce","acc","amount","close","w","map","Ω","Object","keys","k","l","r","i","sum","j","stdev","format"],"mappings":"6KACMA,EAAmBC,KAAKC,aAAa,QAAS,CAClDC,sBAAuB,EACvBC,sBAAuB,IAEV,SAASC,EAAT,GAA0C,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,YAAe,EAC9BC,mBAAS,GAA1BC,EAD+C,KACzCC,EADyC,KAwBtD,OAtBAC,qBAAU,WACR,GAAIL,EAAOM,OAAS,EAAG,CAWrB,IAVA,IAAMC,EAAQP,EAAOQ,QACnB,SAACC,EAAD,UAA4BA,EAA5B,EAAQC,OAAR,EAAgBC,QAChB,GAEIC,EAAIZ,EAAOa,KAAI,qBAAGH,OAAH,EAAWC,MAA+BJ,KACzDO,EAAIC,OAAOC,KAAKf,GAAaY,KAAI,SAAAI,GAAC,OACtCF,OAAOC,KAAKf,EAAYgB,IAAIJ,KAAI,SAAAK,GAAC,OAAIjB,EAAYgB,GAAGC,SAGlDC,EAAI,EACCC,EAAI,EAAGA,EAAIR,EAAEN,OAAQc,IAAK,CAEjC,IADA,IAAIC,EAAM,EACDC,EAAI,EAAGA,EAAIV,EAAEN,OAAQgB,IAC5BD,GAAOP,EAAEM,GAAGE,GAAKV,EAAEU,GAErBH,GAAKE,EAAMT,EAAEQ,GAEfhB,EAAQ,KAAD,IAACe,EAAK,UACRf,EAAQJ,EAAO,GAAKA,EAAO,GAAGuB,MAAQ,KAC5C,CAACtB,IAEF,6BACE,8CACA,iCAAOP,EAAiB8B,OAAc,IAAPrB,GAA/B","file":"component---src-pages-components-result-js-2b9972a6ce286ab475f4.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nconst decimalFormatter = Intl.NumberFormat('pt-BR', {\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n})\nexport default function Result({ assets, covariances }) {\n  const [risk, setRisk] = useState(0)\n  useEffect(() => {\n    if (assets.length > 1) {\n      const total = assets.reduce(\n        (acc, { amount, close }) => acc + amount * close,\n        0\n      )\n      const w = assets.map(({ amount, close }) => (amount * close) / total)\n      const Ω = Object.keys(covariances).map(k =>\n        Object.keys(covariances[k]).map(l => covariances[k][l])\n      )\n\n      let r = 0\n      for (let i = 0; i < w.length; i++) {\n        let sum = 0\n        for (let j = 0; j < w.length; j++) {\n          sum += Ω[i][j] * w[j]\n        }\n        r += sum * w[i]\n      }\n      setRisk(r ** 0.5)\n    } else setRisk(assets[0] ? assets[0].stdev : 0)\n  }, [covariances])\n  return (\n    <div>\n      <h2>Portfolio Risk</h2>\n      <p>σₚ={decimalFormatter.format(risk * 100)}%</p>\n    </div>\n  )\n}\n"],"sourceRoot":""}